# Introduction

<?rfc toc="yes"?>
<?rfc tocompact="no"?>

The DS Resource Record [](#RFC3658)
is published in parent zones to distribute a cryptographic digest of one key in a child's
DNSKEY RRset. With the DS published, a zone sets expectations for a validator. In
particular a digest of the DNSKEY, the algorithm used for signature of the
DNSKEY and the type of authenticated denial of existence used.

When NSEC3 [](#RFC5155) was deployed the known algorithms were aliased to indicate
to validators that the zone could be using NSEC3, as opposed to NSEC.
Resolvers that did not know
about these new algorithm identifiers would treat the zone as insecure
(Section 5.2 of [](#RFC4035) and Section 2 of [](#RFC5155)). This aliasing is
is expensive with respect to the amount of available algorithms, which is limited to 255.

Section 12.1.3. of [](#RFC5155) does not specify a transition mechanism to use
new hash algorithms in NSEC3.
This document outlines a transition mechanism to new hash algorithms that
can be used in NSEC3. It can also be used to transition
to new methods for providing authenticated denial of existence. 

> This transition
> method is best described as a hack.

In this document, the key words "MUST", "MUST NOT", "REQUIRED",
"SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
and "OPTIONAL" are to be interpreted as described in [](#RFC2119).

# DS Record Field Values

Indicating the type of denial of existence in use at the child zone is done by
prefixing the digest in the DS record with two octets defining
the Denial Type:

Denial Type:
:   An extra 16 bit integer value (see [](#iana-considerations)) encoded in the DS' digest 
    that indicates the denial of existence in use in the (child) zone.

Digest:
:   The digest value is calculated by using the following
    formula ("|" denotes concatenation, HASH denotes that
    hash algorithm in use).
     
            digest = Denial Type | HASH(DNSKEY owner name | DNSKEY RDATA)
     
    where DNSKEY RDATA is defined by [](#RFC4034) as:
     
            DNSKEY RDATA = Flags | Protocol | Algorithm | Public Key
     
    The Key Tag field and Algorithm fields remain unchanged by this
    document and are specified in the [](#RFC4034) specification.

This document does *not* change the presentation format of DS records.

# Implementing Denial Type Support in DS Records

This document specifies that the digest type code TBD has been assigned
to SHA-256 [](#RFC4509) with Denial Type. The 32 octet digest produced
by SHA-256 is prefixed with the 2 octet Denial Type resulting in 34 octets.

Zone operators should be aware that changes to their zones' denial of existence
mechanism requires uploading a new DS record with the changed Denial Type Algorithm Code
to their parent.

##  DS Record with Denial Type Wire Format

The resulting on-the-wire format for the resulting DS record will be
as follows:

                          1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           Key Tag             |  Algorithm    |  DigestType   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Denial Type          |                               /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+          Digest               /
     /                                                               /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|
^[fig:wire::The on-the-wire format for the DS. The length of the digest is specified in the respective RFCs defining the digest type.]

The Denial Type is a 16 bit unsigned integer value stored in network order.

##  Example DS Record Using SHA-256 and Denial Type TBD

The following is an example DNSKEY, and a matching DS record that 
includes denial type TBD that refences that NSEC3/SHA1 is in use in 
the child zone. This
DNSKEY record comes from the example DNSKEY/DS records found in
section 5.4 of [](#RFC4034).

The DNSKEY record:

    dskey.example.com. 86400 IN DNSKEY 256 3 5 ( AQOeiiR0GOMYkDshWoSKz9Xz
                                              fwJr1AYtsmx3TGkJaNXVbfi/
                                              2pHm822aJ5iI9BMzNXxeYCmZ
                                              DRD99WYwYqUSdjMmmAphXdvx
                                              egXd/M5+X7OrzKBaMbCVdFLU
                                              Uh6DhweJBjEVv5f2wwjM9Xzc
                                              nOf+EPbtG9DMBmADjFDc2w/r
                                              ljwvFw==) ;  key id = 60485

The resulting DS record covering the above DNSKEY record using a
SHA-256 digest and the Denial Type 2 (i.e. the current NSEC3 record):

    dskey.example.com. 86400 IN DS 60485 5 TBD ( 02D4B7D520E7BB5F0F67674A0C
                                                CEB1E3E0614B93C4F9E99B8383
                                                F6A1E4469DA50A )

Note that the presentation format does not change.

# Deployment Considerations

If a validator does not support the TBD digest type and no other
DS RR exists in a zone's DS RRset with a supported digest type, then
the validator has no supported authentication path leading from the
parent to the child.  The resolver should treat this case as it would
the case of an authenticated NSEC/NSEC3 RRset proving that no DS RRset
exists, as described in [](#RFC4035), Section 5.2 and [](#RFC5155), Section 2.

<!-- FIXME(miek): include this? -->
Because zone administrators cannot control the deployment speed of
support these new digest types in validators that may be referencing any of
their zones, zone operators should consider deploying both older and
supported digest type based DS records.
This should be done for every DNSKEY for
which DS records are being generated.  Whether to make use of both
digest types and for how long is a policy decision that extends
beyond the scope of this document.

<!-- When there are multiple DS records with different Denial Types the FIXME(miek). -->

# IANA Considerations

The following action for IANA are required by this document:

The Digest Types to be used for supporting Denial Type information within
DS records has been assigned by IANA.

At the time of this writing, the current digest types assigned for
use in DS records are as follows:

      VALUE     Digest Type          Status
        0       Reserved                -
        1       SHA-1                MANDATORY
        2       SHA-256              MANDATORY
        3       GOST R 34.11-94      OPTIONAL
        4       SHA-384              OPTIONAL
        TBD     DT-SHA-256           OPTIONAL
       TDB-255  Unassigned              -

All future assigned Digest Types MUST assume that there is a Denial Type incorporated in the Digest.
<!-- FIXME(miek): nicer prefix than DT- -->

This document creates a new IANA registry for Denial Types.  This
registry is named "DNSSEC DENIAL TYPES".  The initial contents of this
registry are:

      VALUE     Denial Type
        0       Reserved
        1       NSEC
        2       NSEC3 w/ SHA-1
        3       NSEC3 w/ SHA-256
        4       NSEC3 w/ SHA-384
     5-65535    Unassigned

<!-- FIXME(miek): define the other NSEC3 ones -->

# Security Considerations

Include security consideration from RFC 4509?

# Acknowledgements

The idea for this draft comes from Mark Andrews.
